---
import { getTranslations, type Locale } from "../i18n/translations";

interface HeroData {
  name: string;
  title: string;
  tagline: string;
  statements: string[];
  ctas: { label: string; href: string }[];
}

interface Fact {
  label: string;
  value: string;
}

interface Props {
  hero: HeroData;
  quickFacts: Fact[];
  locale?: Locale;
}

const { hero, quickFacts, locale = 'en' } = Astro.props;
const t = getTranslations(locale);
---
<section id="hero" class="relative overflow-hidden pb-28 pt-28">
  <div aria-hidden="true" class="absolute inset-0 bg-[var(--gradient-hero)] opacity-70"></div>
  <div class="absolute inset-x-0 bottom-0 h-64 bg-gradient-to-t from-[color:var(--surface-base)]"></div>

  <div class="container relative">
    <div class="grid grid-cols-1 gap-16 lg:grid-cols-12 lg:gap-8">
      <div class="space-y-10 lg:col-span-7">
        <span class="badge">{hero.title}</span>
        <div class="space-y-6">
          <h1 class="font-display text-5xl font-semibold leading-tight text-primary md:text-6xl">
            {hero.name}
          </h1>
          <p class="max-w-2xl text-xl text-secondary">
            {hero.tagline}
          </p>
        </div>
        <ul class="space-y-4 text-base text-muted">
          {hero.statements.map((statement, index) => (
            <li class="flex items-start gap-3" key={`statement-${index}`}>
              <span aria-hidden="true" class="mt-1.5 inline-flex h-2 w-2 flex-none rounded-full bg-[var(--color-accent)]"></span>
              <span>{statement}</span>
            </li>
          ))}
        </ul>
        <div class="flex flex-wrap items-center gap-4">
          {hero.ctas.map((cta, index) => (
            index === 0 ? (
              <a key={cta.href} href={cta.href} class="button-primary">
                {cta.label}
              </a>
            ) : (
              <a key={cta.href} href={cta.href} class="button-ghost">
                {cta.label}
              </a>
            )
          ))}
        </div>
      </div>

      <aside class="glass-panel relative grid gap-6 p-8 lg:col-span-5 lg:self-start">
        <div class="absolute -top-4 left-10 hidden rounded-md border border-soft bg-overlay px-4 py-1 text-xs uppercase tracking-[0.4em] text-soft lg:inline-flex">
          {t.hero.creatingWithPassion}
        </div>
        <div class="relative flex flex-col items-center gap-6 text-center">
          <div class="relative h-48 w-48 overflow-hidden rounded-lg border border-soft bg-overlay">
            <img src="https://tse1.mm.bing.net/th/id/OIP.hPYSzHHEbkC3WzghsU_xjAHaHa?rs=1&pid=ImgDetMain&o=7&rm=3" alt="Headshot" class="w-full h-full object-cover" />
          </div>
        </div>
        <dl class="grid gap-3 text-sm text-left text-muted">
          {quickFacts.map((fact, index) => (
            <div class="flex items-center justify-between rounded-md border border-soft bg-overlay px-4 py-3" key={`fact-${index}`}>
              <dt class="text-xs uppercase tracking-[0.35em] text-soft">{fact.label}</dt>
              <dd class="text-right text-sm font-medium text-primary">{fact.value}</dd>
            </div>
          ))}
        </dl>
      </aside>
    </div>
  </div>

  <div class="scroll-prompt">
    <span>{t.hero.exploreProfile}</span>
    <svg aria-hidden="true" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
      <path d="M12 5v14" />
      <path d="m18 13-6 6-6-6" />
    </svg>
  </div>
</section>
